version: "3.9"
services:
  mysql:
    container_name: mysql
    image: mysql:latest
    platform: linux/amd64
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    # 현재 db는 개발용이기에 volume 설정 X

  adminer: # db 클라이언트
    container_name: adminer
    image: adminer:latest
    restart: always
    ports:
      - "8081:8080"

  springboot:
    container_name: springboot
    build: .
    restart: always
    ports:
      - "${PORT}:8080"
    depends_on:
      - mysql
    environment:
      WAIT_HOSTS: mysql:3306
      SPRING_DATASOURCE_URL: jdbc:mysql://${DB_HOST}:3306/${DB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_ROOT_PASSWORD}
    env_file: ./.env

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - "9100:9100"
    restart: always
    deploy:
      mode: global

  prometheus:
    image: prom/prometheus:latest
    restart: always
    container_name: prometheus
    user: root
    ports:
      - "9090:9090"
    links:
      - alertmanager:alertmanager
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"

  grafana:
    image: grafana/grafana:latest
    restart: always
    user: "root"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "8082:3000"
    volumes:
      - grafana_volume:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning

volumes:
  grafana_volume: 
